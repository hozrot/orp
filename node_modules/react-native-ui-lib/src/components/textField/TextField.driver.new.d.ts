import { ComponentProps } from '../../testkit/new/Component.driver';
export declare const TextFieldDriver: (props: ComponentProps) => {
    getValue: () => string | undefined;
    changeText: (text: string) => void;
    focus: () => void;
    blur: () => void;
    isEnabled: () => boolean;
    getPlaceholder: () => {
        exists: () => boolean;
        getText: () => string | undefined;
        getStyle: () => import("react-native/types").TextStyle;
        press: () => void;
        hasOnPress: () => boolean;
        onPressIn: () => void;
        hasOnPressIn: () => boolean;
        onPressOut: () => void;
        hasOnPressOut: () => boolean;
        onLongPress: () => void;
        hasOnLongPress: () => boolean;
        getElement: () => import("react-test-renderer").ReactTestInstance;
    };
    getLabel: () => {
        exists: () => boolean;
        getText: () => string | (string | import("react-test-renderer").ReactTestInstance)[];
        getStyle: () => import("react-native/types").TextStyle;
        press: () => void;
        hasOnPress: () => boolean;
        onPressIn: () => void;
        hasOnPressIn: () => boolean;
        onPressOut: () => void;
        hasOnPressOut: () => boolean;
        onLongPress: () => void;
        hasOnLongPress: () => boolean;
        getElement: () => import("react-test-renderer").ReactTestInstance;
    };
    getValidationMessage: () => {
        exists: () => boolean;
        getText: () => string | (string | import("react-test-renderer").ReactTestInstance)[];
        getStyle: () => import("react-native/types").TextStyle;
        press: () => void;
        hasOnPress: () => boolean;
        onPressIn: () => void;
        hasOnPressIn: () => boolean;
        onPressOut: () => void;
        hasOnPressOut: () => boolean;
        onLongPress: () => void;
        hasOnLongPress: () => boolean;
        getElement: () => import("react-test-renderer").ReactTestInstance;
    };
    getCharCounter: () => {
        getText: () => string | (string | import("react-test-renderer").ReactTestInstance)[];
        getStyle: () => import("react-native/types").TextStyle;
        press: () => void;
        hasOnPress: () => boolean;
        onPressIn: () => void;
        hasOnPressIn: () => boolean;
        onPressOut: () => void;
        hasOnPressOut: () => boolean;
        onLongPress: () => void;
        hasOnLongPress: () => boolean;
        getElement: () => import("react-test-renderer").ReactTestInstance;
        exists: () => boolean;
    };
    press: () => void;
    hasOnPress: () => boolean;
    onPressIn: () => void;
    hasOnPressIn: () => boolean;
    onPressOut: () => void;
    hasOnPressOut: () => boolean;
    onLongPress: () => void;
    hasOnLongPress: () => boolean;
    getElement: () => import("react-test-renderer").ReactTestInstance;
    exists: () => boolean;
};
